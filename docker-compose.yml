version: "2"

services:
  users-api:
    image: golang:1.20-alpine
    links:
      - jaeger:jaeger
    depends_on:
      - kafka
      - jaeger
    volumes:
      - ./:/usr/src/app
    command: go run /usr/src/app/users-api/cmd/combined/combined.go
    working_dir: /usr/src/app
    environment:
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
      - OTEL_RESOURCE_ATTRIBUTES=service.name=users-api
    ports:
      - "127.0.0.1:8080:8080"

  email-notifier:
    image: golang:1.20-alpine
    depends_on:
      - kafka
    volumes:
      - ./:/usr/src/app
    command: go run /usr/src/app/email-notifier/cmd/main.go /usr/src/app/email-notifier/cmd/wire_gen.go
    working_dir: /usr/src/app

  orders-api:
    image: golang:1.20-alpine
    links:
      - users-api:users-api
      - kafka:kafka
      - jaeger:jaeger
    depends_on:
      - kafka
      - users-api
    volumes:
      - ./:/usr/src/app
    command: go run /usr/src/app/orders-api/cmd/http/http.go /usr/src/app/orders-api/cmd/http/wire_gen.go
    working_dir: /usr/src/app
    environment:
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
      - OTEL_RESOURCE_ATTRIBUTES=service.name=orders-api
    ports:
      - "127.0.0.1:8081:8081"

  jaeger:
    image: jaegertracing/all-in-one:1.45
    ports:
      - "14268:14268"
      - "127.0.0.1:16686:16686"

  kafka:
    image: docker.io/bitnami/kafka:3.4
    hostname: "kafka"
    ports:
      - "127.0.0.1:9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes

volumes:
  kafka_data:
    driver: local
